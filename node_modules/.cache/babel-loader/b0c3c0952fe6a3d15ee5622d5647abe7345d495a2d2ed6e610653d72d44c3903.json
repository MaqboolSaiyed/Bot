{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\n// Backend API endpoint\nconst API_URL = 'http://localhost:3001/api/chat';\nexport const useChatBot = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendMessage = useCallback(async message => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to get response from the server');\n      }\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      return data.response;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'An unknown error occurred';\n      setError(errorMessage);\n      return \"I'm sorry, I encountered an error while processing your request. Please try again.\";\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  return {\n    sendMessage,\n    isLoading,\n    error\n  };\n};\n_s(useChatBot, \"bqdQKjv51KK9iTWK/BkMV1uKXpg=\");","map":{"version":3,"names":["useState","useCallback","API_URL","useChatBot","_s","isLoading","setIsLoading","error","setError","sendMessage","message","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","err","errorMessage"],"sources":["D:/Amaan/Projects/HomeLLC/Task/voice-chat-bot/src/hooks/useChatBot.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\r\n\r\ninterface ChatBotState {\r\n  sendMessage: (message: string) => Promise<string>;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\n// Backend API endpoint\r\nconst API_URL = 'http://localhost:3001/api/chat';\r\n\r\nexport const useChatBot = (): ChatBotState => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const sendMessage = useCallback(async (message: string): Promise<string> => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(API_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ message })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to get response from the server');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      return data.response;\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'An unknown error occurred';\r\n      setError(errorMessage);\r\n      return \"I'm sorry, I encountered an error while processing your request. Please try again.\";\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    sendMessage,\r\n    isLoading,\r\n    error\r\n  };\r\n}; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAQ7C;AACA,MAAMC,OAAO,GAAG,gCAAgC;AAEhD,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAoB;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMS,WAAW,GAAGR,WAAW,CAAC,MAAOS,OAAe,IAAsB;IAC1EJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACV,OAAO,EAAE;QACpCW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAQ,CAAC;MAClC,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACb,KAAK,EAAE;QACd,MAAM,IAAIY,KAAK,CAACC,IAAI,CAACb,KAAK,CAAC;MAC7B;MAEA,OAAOa,IAAI,CAACT,QAAQ;IACtB,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZ,MAAMC,YAAY,GAAGD,GAAG,YAAYH,KAAK,GAAGG,GAAG,CAACZ,OAAO,GAAG,2BAA2B;MACrFF,QAAQ,CAACe,YAAY,CAAC;MACtB,OAAO,oFAAoF;IAC7F,CAAC,SAAS;MACRjB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLG,WAAW;IACXJ,SAAS;IACTE;EACF,CAAC;AACH,CAAC;AAACH,EAAA,CA1CWD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}