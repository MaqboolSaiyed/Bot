{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nexport const useVoiceRecognition = () => {\n  _s();\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Check if browser supports speech recognition\n  const recognition = typeof window !== 'undefined' ? new (window.SpeechRecognition || window.webkitSpeechRecognition)() : null;\n  useEffect(() => {\n    if (!recognition) {\n      setError('Speech recognition is not supported in your browser.');\n      return;\n    }\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n    recognition.onresult = event => {\n      const current = event.resultIndex;\n      const transcript = event.results[current][0].transcript;\n      setTranscript(transcript);\n    };\n    recognition.onerror = event => {\n      setError(`Error occurred in recognition: ${event.error}`);\n      setIsListening(false);\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n    return () => {\n      if (isListening) {\n        recognition.stop();\n      }\n    };\n  }, [recognition, isListening]);\n  const startListening = useCallback(() => {\n    if (!recognition) {\n      setError('Speech recognition is not supported in your browser.');\n      return;\n    }\n    try {\n      recognition.start();\n      setIsListening(true);\n      setError(null);\n    } catch (err) {\n      setError('Failed to start listening.');\n      setIsListening(false);\n    }\n  }, [recognition]);\n  const stopListening = useCallback(() => {\n    if (!recognition) return;\n    try {\n      recognition.stop();\n      setIsListening(false);\n    } catch (err) {\n      setError('Failed to stop listening.');\n    }\n  }, [recognition]);\n  return {\n    transcript,\n    isListening,\n    startListening,\n    stopListening,\n    error\n  };\n};\n_s(useVoiceRecognition, \"5eKA+PSc1kASmloNQPFSInESzH4=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useVoiceRecognition","_s","transcript","setTranscript","isListening","setIsListening","error","setError","recognition","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","current","resultIndex","results","onerror","onend","stop","startListening","start","err","stopListening"],"sources":["D:/Amaan/Projects/HomeLLC/Task/voice-chat-bot/src/hooks/useVoiceRecognition.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\n\r\ninterface VoiceRecognitionState {\r\n  transcript: string;\r\n  isListening: boolean;\r\n  startListening: () => void;\r\n  stopListening: () => void;\r\n  error: string | null;\r\n}\r\n\r\nexport const useVoiceRecognition = (): VoiceRecognitionState => {\r\n  const [transcript, setTranscript] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Check if browser supports speech recognition\r\n  const recognition = typeof window !== 'undefined' \r\n    ? new (window.SpeechRecognition || window.webkitSpeechRecognition)()\r\n    : null;\r\n\r\n  useEffect(() => {\r\n    if (!recognition) {\r\n      setError('Speech recognition is not supported in your browser.');\r\n      return;\r\n    }\r\n\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n    recognition.lang = 'en-US';\r\n\r\n    recognition.onresult = (event) => {\r\n      const current = event.resultIndex;\r\n      const transcript = event.results[current][0].transcript;\r\n      setTranscript(transcript);\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      setError(`Error occurred in recognition: ${event.error}`);\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n\r\n    return () => {\r\n      if (isListening) {\r\n        recognition.stop();\r\n      }\r\n    };\r\n  }, [recognition, isListening]);\r\n\r\n  const startListening = useCallback(() => {\r\n    if (!recognition) {\r\n      setError('Speech recognition is not supported in your browser.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      recognition.start();\r\n      setIsListening(true);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to start listening.');\r\n      setIsListening(false);\r\n    }\r\n  }, [recognition]);\r\n\r\n  const stopListening = useCallback(() => {\r\n    if (!recognition) return;\r\n\r\n    try {\r\n      recognition.stop();\r\n      setIsListening(false);\r\n    } catch (err) {\r\n      setError('Failed to stop listening.');\r\n    }\r\n  }, [recognition]);\r\n\r\n  return {\r\n    transcript,\r\n    isListening,\r\n    startListening,\r\n    stopListening,\r\n    error\r\n  };\r\n}; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAUxD,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAA6B;EAAAC,EAAA;EAC9D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;;EAEvD;EACA,MAAMW,WAAW,GAAG,OAAOC,MAAM,KAAK,WAAW,GAC7C,KAAKA,MAAM,CAACC,iBAAiB,IAAID,MAAM,CAACE,uBAAuB,EAAE,CAAC,GAClE,IAAI;EAERb,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,WAAW,EAAE;MAChBD,QAAQ,CAAC,sDAAsD,CAAC;MAChE;IACF;IAEAC,WAAW,CAACI,UAAU,GAAG,IAAI;IAC7BJ,WAAW,CAACK,cAAc,GAAG,IAAI;IACjCL,WAAW,CAACM,IAAI,GAAG,OAAO;IAE1BN,WAAW,CAACO,QAAQ,GAAIC,KAAK,IAAK;MAChC,MAAMC,OAAO,GAAGD,KAAK,CAACE,WAAW;MACjC,MAAMhB,UAAU,GAAGc,KAAK,CAACG,OAAO,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC,CAACf,UAAU;MACvDC,aAAa,CAACD,UAAU,CAAC;IAC3B,CAAC;IAEDM,WAAW,CAACY,OAAO,GAAIJ,KAAK,IAAK;MAC/BT,QAAQ,CAAC,kCAAkCS,KAAK,CAACV,KAAK,EAAE,CAAC;MACzDD,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;IAEDG,WAAW,CAACa,KAAK,GAAG,MAAM;MACxBhB,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;IAED,OAAO,MAAM;MACX,IAAID,WAAW,EAAE;QACfI,WAAW,CAACc,IAAI,CAAC,CAAC;MACpB;IACF,CAAC;EACH,CAAC,EAAE,CAACd,WAAW,EAAEJ,WAAW,CAAC,CAAC;EAE9B,MAAMmB,cAAc,GAAGxB,WAAW,CAAC,MAAM;IACvC,IAAI,CAACS,WAAW,EAAE;MAChBD,QAAQ,CAAC,sDAAsD,CAAC;MAChE;IACF;IAEA,IAAI;MACFC,WAAW,CAACgB,KAAK,CAAC,CAAC;MACnBnB,cAAc,CAAC,IAAI,CAAC;MACpBE,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZlB,QAAQ,CAAC,4BAA4B,CAAC;MACtCF,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC,EAAE,CAACG,WAAW,CAAC,CAAC;EAEjB,MAAMkB,aAAa,GAAG3B,WAAW,CAAC,MAAM;IACtC,IAAI,CAACS,WAAW,EAAE;IAElB,IAAI;MACFA,WAAW,CAACc,IAAI,CAAC,CAAC;MAClBjB,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOoB,GAAG,EAAE;MACZlB,QAAQ,CAAC,2BAA2B,CAAC;IACvC;EACF,CAAC,EAAE,CAACC,WAAW,CAAC,CAAC;EAEjB,OAAO;IACLN,UAAU;IACVE,WAAW;IACXmB,cAAc;IACdG,aAAa;IACbpB;EACF,CAAC;AACH,CAAC;AAACL,EAAA,CA5EWD,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}